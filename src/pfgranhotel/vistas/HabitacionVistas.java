/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pfgranhotel.vistas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import pfgranhotel.accesoDatos.*;
import pfgranhotel.entidades.*;


/**
 *
 * @author HP
 */
public class HabitacionVistas extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;

    private HabitacionData hd;
    private TipoDeHabitacionData tpd;
    private ArrayList<TipoDeHabitacion> tha;
    private ArrayList<Habitacion> hab;
    private ReservaData res;

    public HabitacionVistas() {
        initComponents();
        hd = new HabitacionData();
        tpd = new TipoDeHabitacionData();
        res = new ReservaData();

        hab = (ArrayList<Habitacion>) hd.listarHabitaciones();
        tha = (ArrayList<TipoDeHabitacion>) tpd.listhabN();
        modelo = new DefaultTableModel();
        armarTabla();
        cargarHabitaciones();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jtHab = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRlibre = new javax.swing.JRadioButton();
        jRocupada = new javax.swing.JRadioButton();
        jBsalir = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jBmodificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(50, 50));
        setPreferredSize(new java.awt.Dimension(1000, 862));

        jtHab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtHab);

        jLabel1.setText("Seleccione un tipo de habitacion:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Habitaciones");

        jRlibre.setText("Libre");
        jRlibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRlibreActionPerformed(evt);
            }
        });

        jRocupada.setText("Ocupada");
        jRocupada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRocupadaActionPerformed(evt);
            }
        });

        jBsalir.setText("Salir");
        jBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalirActionPerformed(evt);
            }
        });

        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jBmodificar.setText("Modificar");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)
                        .addGap(81, 81, 81)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 433, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jBmodificar)
                        .addGap(211, 211, 211)
                        .addComponent(jBsalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jRlibre)
                        .addGap(175, 175, 175)
                        .addComponent(jRocupada)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRlibre)
                    .addComponent(jRocupada))
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBmodificar)
                    .addComponent(jBsalir))
                .addContainerGap(295, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRocupadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRocupadaActionPerformed
//        borrarFilas();
//        jRlibre.setSelected(false);
//        habporTipo();
    }//GEN-LAST:event_jRocupadaActionPerformed
       
       
        
    private void jRlibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRlibreActionPerformed
//         borrarFilas();
//        jRocupada.setSelected(false);
//        habporNoTipo();
    }//GEN-LAST:event_jRlibreActionPerformed

    private void jBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalirActionPerformed
     dispose();
    }//GEN-LAST:event_jBsalirActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
       borrarFilas();
        habporTipo();
       
    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBmodificar;
    private javax.swing.JButton jBsalir;
    private javax.swing.JComboBox<TipoDeHabitacion> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRlibre;
    private javax.swing.JRadioButton jRocupada;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jtHab;
    // End of variables declaration//GEN-END:variables

  private void armarTabla() {
        ///seteamos cada columna para q aparezcan los sig titulos.
        modelo.addColumn("código");
        modelo.addColumn("cantidad de personas");
        modelo.addColumn("cantidad de camas");
        modelo.addColumn("tipos de camas");
        modelo.addColumn("precio por noche");
        jtHab.setModel(modelo);
    }

    private void cargarHabitaciones() {

        for (TipoDeHabitacion tip : tha) {
            jComboBox2.addItem(tip);
        }

    }
    private void borrarFilas() {
        int ind = modelo.getRowCount() - 1;
        for (int i = ind; i > -1; i--) {
            modelo.removeRow(i);
        }
    }
////ESTOS DOS METODOS SON PARA BUSCAR POR IDHABITACION
//    private void habitacionesTabla() {
//        Habitacion a = (Habitacion) jComboBox1.getSelectedItem();
//        tha = (ArrayList) tpd.obtenertipoxhab(a.getIdHabitacion());
//        for (TipoDeHabitacion tip : tha) {
//            modelo.addRow(new Object[]{tip.getIdTipo(), tip.getCantPers(), tip.getCantCamas(), tip.getTipoDeCamas(), tip.getPrecio(),});
//        }
//    }
//
//    private void habitacioNotabla() {
//        Habitacion a = (Habitacion) jComboBox1.getSelectedItem();
//        tha = (ArrayList) tpd.obtenertipoxNhab(a.getIdHabitacion());
//        for (TipoDeHabitacion tip : tha) {
//            modelo.addRow(new Object[]{tip.getIdTipo(), tip.getCantPers(), tip.getCantCamas(), tip.getTipoDeCamas(), tip.getPrecio(),});
//        }
//    }


    public void habporTipo() {
        TipoDeHabitacion a = (TipoDeHabitacion) jComboBox2.getSelectedItem();
        tha = (ArrayList) tpd.obtenerHabi(a.getTipoDeHabitacion());
        for (TipoDeHabitacion tip : tha) {
            modelo.addRow(new Object[]{tip.getIdTipo(), tip.getCantPers(), tip.getCantCamas(), tip.getTipoDeCamas(), tip.getPrecio(),tip.isEstado()});
        }

    }
    
    public void habporNoTipo() {
        TipoDeHabitacion a = (TipoDeHabitacion) jComboBox2.getSelectedItem();
        tha = (ArrayList) tpd.obtenerNoHabi(a.getTipoDeHabitacion());
        for (TipoDeHabitacion tip : tha) {
            modelo.addRow(new Object[]{tip.getIdTipo(), tip.getCantPers(), tip.getCantCamas(), tip.getTipoDeCamas(), tip.getPrecio(),tip.isEstado()});
        }
    
} 
    
}  

